MODULE mo_landsea

       !mo_landsea.f90
       !xiouhua Fu (sep 2000)

       USE mo_control,     ONLY:ngl, nlon
       USE mo_doctor,      ONLY:nout,nerr 

       INTEGER, ALLOCATABLE, SAVE :: aland(:,:)	
       INTEGER, SAVE :: itopo(720,121)
       INTEGER, ALLOCATABLE, SAVE :: iland(:,:)	
       INTEGER, ALLOCATABLE, TARGET, SAVE :: bzone(:,:)	
       INTEGER, ALLOCATABLE, TARGET, SAVE :: bzone1(:,:)	
       REAL, ALLOCATABLE, SAVE :: agx(:)
       REAL, ALLOCATABLE, SAVE :: agy(:)
       REAL, SAVE :: sgx(720)
       REAL, SAVE :: sgy(121)
       REAL, ALLOCATABLE, TARGET, SAVE :: sstatm(:,:)
       CONTAINS
	
       subroutine amask(slmm,vlat,vlon)
!c===get the land-sea mask on the atmospheric grid
!c     and Land-Sea mask for ocean model and bzone
!c-------------------------------------------------------------
!c  Atmospheric grid (j=1) is from North Pole
!c-------------------------------------------------------------
	parameter (imo=720,jmo=121)
!c	integer*4 imask
!c	common /csbc1/aland(ima,jma),itopo(imo,jmo),
!c     1         iland(ima,jma),agx(ima),agy(jma),sgx(imo),sgy(jmo)
        common /fulat/jbs,jbe

!fu++	integer aslm(nlon,ngl)
        integer ieas(ngl),iwes(ngl)
        REAL vlat(ngl),vlon(nlon)
	dimension isea(nlon,ngl),hlp(nlon,jmo),slmm(:,:), &
          topo(imo,jmo),jland(nlon,ngl)
	REAL*4 atopo(imo,jmo)
      
	character*110  filein

	data dxo/0.5/,dyo/0.5/
	data ibs/2/
!	data jbs/34/,jbe/15/,ibs/2/

	data nind,npac,natl/1,1,0/ !active three ocean

	ALLOCATE(aland(1:nlon,1:ngl))
	ALLOCATE(iland(1:nlon,1:ngl))
	ALLOCATE(bzone(1:nlon,1:ngl))
	ALLOCATE(bzone1(1:nlon,1:ngl))
	ALLOCATE(agx(1:nlon))
	ALLOCATE(agy(1:ngl))

        !get the latitude & longitude values
	agx = vlon
        agy = vlat

        !
        !try to find jbs and jbe from vlat(ngl)
	do j=1,ngl
	if(vlat(j).lt.30.0) then
        jbe=j-2
	write(nout,*)'jbe=,vlat=',jbe,vlat(jbe)
        goto 61 	
	end if
	end do
61      continue

        do j=1,ngl
	if(vlat(j).lt.-30.0) then
        jbs=j+1
	write(nout,*)'jbs=,vlat=',jbs,vlat(jbs)
	goto 62 
        end if
        end do 
62      continue

!===============================================================
!	open(330,file='../DATAIO/slmm.dat',&
!             &form='unformatted')
!	read(330) ((aslm(i,j),i=1,nlon),j=1,ngl)
!	close(330)
!===============================================================
	
	do i=1,nlon
           do j=1,ngl
           
	   if(slmm(i,j).ge.1) then       !over land
	   aland(i,j)=0
	   iland(i,j)=0
	   else
	   aland(i,j)=1
	   iland(i,j)=1
	   end if
           jland(i,j)=0
	   end do
	end do

!c===view the structure of 'iland'

	call view(iland,nlon,ngl,1,nlon,1,ngl,1)

!c===get 'bzone' for atmospheric model
!c===get modified active ocean domain (nind,npac,natl)
	if(min(nind,npac,natl).eq.1) then
	do j=1,ngl
	 do i=1,nlon
	 jland(i,j)=iland(i,j)
	 end do
	end do
	goto 777
	end if
!c=====active Indian ocean ONLY
       if(nind.eq.1) then
	do j=22,44
	do i=9,37
	jland(i,j)=iland(i,j)
	end do
	end do
	do j=35,44
	do i=37,49
	jland(i,j)=iland(i,j)
	end do
	end do
       end if
!c===================================================
	iland(100,29)=1
	iland(101,30)=1
!c====active Pacific ocean ONLY
	if(npac.eq.1) then
	do j=20,45
	is=83
	do i=is,105
	if(iland(i,j).eq.1.and.iland(i+1,j).ne.1) then
	ieas(j)=i
	goto 33
	end if
	end do
33      end do

	do j=20,45
	do i=49,ieas(j)
	jland(i,j)=iland(i,j)
	end do
	end do

	do j=20,35
	do i=38,49
	jland(i,j)=iland(i,j)
	end do
	end do
	end if
!c======active Atlantic ocean ONLY
	if(natl.eq.1) then
	do j=20,45
	is=83
	do i=is,105
	if(iland(i,j).eq.1.and.iland(i+1,j).ne.1) then
	ieas(j)=i+1
	goto 34
	end if
	end do
34      end do

	do j=20,45
	do i=ieas(j),137
	ii=i
	if(i.gt.nlon) ii=i-nlon
	jland(ii,j)=iland(ii,j)
	end do
	end do
	end if
!c===get the active ocean domain on atmospheric grid
777	do i=1,nlon
           do j=1,ngl
	   bzone(i,j)=2
	   isea(i,j)=0
           if(j.ge.(jbe+2).and.j.le.(jbs-2).and.jland(i,j).gt.0) then
	   bzone(i,j)=1
	   isea(i,j)=1
	   end if
	   end do
	end do
!c--get the transient zone between the active ocean and 'land mass'
!c--primarily over the land in this case

	do i=1,nlon
	   do j=jbe+1,jbs-1
	   ia=i-1
	   ib=i+1
	   ja=j-1
	   jb=j+1
	   if(i.eq.1) ia=nlon 
	   if(i.eq.nlon) ib=1
	   if(bzone(i,j).eq.2) then
	   if(bzone(ia,j).eq.1.or.bzone(ib,j).eq.1  &
      &     .or.bzone(i,ja).eq.1.or.bzone(i,jb).eq.1)then
!c     1    .or.bzone(ia,ja).eq.1.or.bzone(ia,jb).eq.1
!c     1    .or.bzone(ib,ja).eq.1.or.bzone(ib,jb).eq.1)then
	   bzone(i,j)=0
	   end if
	   end if

	   end do
	end do	
 
	   	   
	call view(bzone,nlon,ngl,1,nlon,1,ngl,1)

!c===get 'topo' for intermediate ocean model
!c==linearly interpolating isea(nlon,ngl) to (imo,jmo)
!c	agx(1)=0.
!c	do i=2,nlon
!c	agx(i)=agx(i-1)+dx
!c	end do

	sgx(1)=0.
	do i=2,imo
	sgx(i)=sgx(i-1)+dxo
	end do

	sgy(1)=-30.
	do j=2,jmo
	sgy(j)=sgy(j-1)+dyo
	end do
!c====================
	write(nout,*)'agx=',agx
	write(nout,*)'sgx=',sgx
	write(nout,*)'sgy=',sgy
!c===================
!c===>interpolating in y direction
	do j=1,jmo
	   do i=1,nlon
!c--find the atmospheric grids in y direction
            jb1=jbs
	   do jj=jb1,jbe,-1
	   if(sgy(j).ge.agy(jj).and.sgy(j).lt.agy(jj-1)) then
	   jb1=jj
	   aa1=float(isea(i,jj))
	   aa2=float(isea(i,jj-1))
	   hlp(i,j)=aa1+(aa2-aa1)*(sgy(j)-agy(jj))/(agy(jj-1)-agy(jj))
	   goto 78
	   end if
 	   end do
	
78	   end do
	end do

!c===>interplating in x direction
	do i=1,imo
	   do j=1,jmo
!c--find the atmospheric grids in x direction
	   if(i.eq.1) then
	   topo(1,j)=hlp(1,j)      !start from 0
	   end if

	   do ii=ibs,nlon
	   ia=ii-1
	   ib=ii

	   if(sgx(i).lt.agx(1)) then
	   aa1=hlp(nlon,j)
	   aa2=hlp(1,j)
	   ax=-360.+agx(nlon)
	   topo(i,j)=aa1+(aa2-aa1)*(sgx(i)-ax)/(agx(1)-ax)
	   goto 77
	   end if
	  
	   if(sgx(i).gt.agx(nlon)) then
	   aa1=hlp(nlon,j)
	   aa2=hlp(1,j)
	   ax=360.+agx(1)
	   topo(i,j)=aa1+(aa2-aa1)*(sgx(i)-agx(nlon))/(ax-agx(nlon))
	   goto 77
	   end if

	   if(sgx(i).gt.agx(ia).and.sgx(i).le.agx(ib)) then
	   ibs=ib
	
	   aa1=hlp(ia,j)
	   aa2=hlp(ib,j)
	   topo(i,j)=aa1+(aa2-aa1)*(sgx(i)-agx(ia))/(agx(ib)-agx(ia))
	   goto 77
	   end if
 	   end do
	
77	   end do
	end do

!c=====>view topo
	do i=1,imo
	   do j=1,jmo
	   itopo(i,j)=0
	   if(topo(i,j).ge.0.5) itopo(i,j)=1
	   end do
        end do

!c----->ajustment of itopo
	do j=71,88
	do i=199,203
	itopo(i,j)=0
	end do
	end do
!c===========
	do i=200,202 
	itopo(i,60)=1
	itopo(i,59)=1
	end do
	do i=200,203 
	itopo(i,58)=1
	itopo(i,57)=1
	end do
	do i=200,204 
	itopo(i,56)=1
	itopo(i,55)=1
	end do
	do i=200,205 
	itopo(i,54)=1
	itopo(i,53)=1
	end do
!c===========cut off south china sea
	do i=205,225
	do j=58,62
	itopo(i,j)=0
	end do
	end do

	do j=58,61
	itopo(205,j)=0
	itopo(206,j)=0
	itopo(207,j)=0
	itopo(208,j)=0
	itopo(209,j)=0
	end do
	do j=56,59
	itopo(206,j)=0
	itopo(207,j)=0
	itopo(208,j)=0
	itopo(209,j)=0
	itopo(210,j)=0
	end do
	do j=54,57
	itopo(206,j)=0
	itopo(207,j)=0
	itopo(208,j)=0
	itopo(209,j)=0
	itopo(210,j)=0
	itopo(211,j)=0
	end do
	do j=52,55
	itopo(208,j)=0
	itopo(209,j)=0
	itopo(210,j)=0
	itopo(211,j)=0
	itopo(212,j)=0
	end do
	do j=50,53
	itopo(209,j)=0
	itopo(210,j)=0
	itopo(211,j)=0
	itopo(212,j)=0
	end do
	
	do j=48,51
	itopo(210,j)=0
	itopo(211,j)=0
	itopo(212,j)=0
	end do
	do j=47,50
	itopo(213,j)=0
	itopo(214,j)=0
	itopo(215,j)=0
	end do
	do j=46,49
	itopo(216,j)=0
	itopo(217,j)=0
	itopo(218,j)=0
	itopo(219,j)=0
	end do
	do i=220,230
	do j=45,48
	itopo(i,j)=0
	end do
	end do
!c=========Indonesian through flow is here

	do i=238,245
	do j=43,46
	itopo(i,j)=0
	end do
	end do
	do i=245,255
	do j=42,45
	itopo(i,j)=0
	end do
	end do
	do i=255,260
	do j=41,44
	itopo(i,j)=0
	end do
	end do
!c	do i=260,265
!c	do j=40,41
!c	itopo(i,j)=0
!c	end do
!c	end do
!c	do i=263,265
!c	do j=30,40
!c	itopo(i,j)=0
!c	end do
!c	end do
!c
!c================================================
	do j=86,97
	do i=242,245
	itopo(i,j)=0
	end do
	end do
	do i=245,246
	do j=85,90
	itopo(i,j)=0
	end do
	end do
	do i=247,248
	do j=81,85
	itopo(i,j)=0
	end do
	end do
	do i=249,250
	do j=76,81
	itopo(i,j)=0
	end do
	end do
	do i=251,252
	do j=71,76
	itopo(i,j)=0
	end do
	end do
!c===fu++ 3/4/2003
!c	do i=251,252
!c	do j=65,71
!c	itopo(i,j)=0
!c	end do
!c	end do
	do i=284,287
	do j=27,46
	itopo(i,j)=0
	end do
	end do

!c================================================
	do j=61,63
	itopo(254,j)=0
	itopo(255,j)=0
	itopo(256,j)=0
	end do
	do j=60,61
	itopo(257,j)=0
	itopo(258,j)=0
	end do
	do j=59,60
	itopo(259,j)=0
	itopo(260,j)=0
	end do
	do j=58,59
	itopo(261,j)=0
	itopo(262,j)=0
	end do
	do j=57,58
	itopo(263,j)=0
	itopo(264,j)=0
	end do
	do j=56,57
	itopo(265,j)=0
	itopo(266,j)=0
	end do
	do j=55,56
	itopo(267,j)=0
	itopo(268,j)=0
	end do
	do j=54,55
	itopo(269,j)=0
	itopo(270,j)=0
	end do
	do j=53,54
	itopo(271,j)=0
	itopo(272,j)=0
	end do
	do j=52,53
	itopo(273,j)=0
	itopo(274,j)=0
	end do
	do j=51,52
	itopo(275,j)=0
	itopo(276,j)=0
	end do
!c=====================================================================
	do i=61,91
	do j=88,121
	itopo(i,j)=0
	end do
	end do
	do i=91,111
	do j=100,121
	itopo(i,j)=0
	end do
	end do

!c====================end of adjustment====================>
	do i=1,imo
	do j=1,jmo
	atopo(i,j)=float(itopo(i,j))
	end do
	end do

!c===================================================>
!c===save 'itopo'
        open(10,file='itop.dat',form='unformatted')
	write(10) itopo
	close(10)
        open(20,file='itop.look',form='unformatted',&
        & access='sequential')
	write(20) atopo
	close(20)
!c======================================================================

	call viewtop(itopo,1,181,jmo,1,-1)

!c======================================================================
!c         create a bzone1 to atmospheric model
	
	do i=1,nlon
           do j=1,ngl
	   bzone1(i,j)=bzone(i,j)
           if(i.ge.65) then   !east of 180
	   bzone1(i,j)=2
	   end if
	   end do
	end do

        return	
	end subroutine amask

!c=======================================================================
	subroutine view(fland,nlon,ngl,is,ie,js,je,jv)
	integer fland(nlon,ngl)
	integer gland(nlon,ngl)

	!change length
	do i=1,nlon
	do j=1,ngl
	gland(i,j) = fland(i,j)
	end do
	end do
        !
	im=nlon/2
	write(nout,110)
110     format(/, 1x,'Atmospheric land/sea mask follows:'/)

	do j=js,je,jv
	write(nout,'(i2,1x,100i1)')j,(gland(i,j),i=10,109)
	end do

!c======save for print-out
	write(12,111)
111     format(//////, 1x,'Atmospheric land/sea mask follows:'////)

	write(12,121)((gland(i,j),i=is,im),j=js,je,jv)
121     format(64i1)
	write(12,111)
	write(12,123)((gland(i,j),i=im,ie),j=js,je,jv)
123     format(65i1)


	return
	end subroutine view 
  
	subroutine viewtop(top,is,ie,js,je,jv)
	integer top
	parameter(ima=720,jma=121)
	dimension top(ima,jma)
        integer atop(ima,jma)

	!change length
	do i=1,ima
	do j=1,jma
	atop(i,j)=top(i,j)
	end do
	end do
        !
	write(nout,110)
110     format(/, 1x,'Oceanic land/sea mask follows:'/)

	write(nout,120)((atop(i,j),i=is,ie,2),j=js,je,jv)
120     format(1x,100i1)

!c======save for print-out
	write(13,111)
111     format(//////, 1x,'Oceanic land/sea mask follows:'////)

	write(13,121)((atop(i,j),i=is,60),j=js,je,jv)
121     format(1x,60i1)

	write(14,111)
	write(14,121)((atop(i,j),i=61,120),j=js,je,jv)

	write(15,111)
	write(15,121)((atop(i,j),i=121,181),j=js,je,jv)

	return
	end subroutine viewtop


	END MODULE mo_landsea
